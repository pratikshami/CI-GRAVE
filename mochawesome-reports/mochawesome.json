{
  "reportTitle": "JS-CI-Repo2-master",
  "stats": {
    "suites": 4,
    "tests": 4,
    "passes": 4,
    "pending": 0,
    "failures": 0,
    "start": "2015-04-08T05:48:09.167Z",
    "end": "2015-04-08T05:48:09.433Z",
    "duration": 266,
    "testsRegistered": 4,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "Hello",
        "suites": [
          {
            "title": "#sayHello",
            "suites": [],
            "tests": [
              {
                "title": "should return the default hello message if no options are provided",
                "fullTitle": "Hello #sayHello should return the default hello message if no options are provided",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\nassert.equal(<span class=\"hljs-string\">'Hello World!'</span>, hello.sayHello());",
                "isRoot": false,
                "uuid": "2b20f117-ee9d-451d-83b8-72dd11d1878e",
                "parentUUID": "72516393-74cc-4e4e-8549-868ae26a92bc",
                "skipped": false
              },
              {
                "title": "should allow the user to override the helloMessage when instantiating",
                "fullTitle": "Hello #sayHello should allow the user to override the helloMessage when instantiating",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello({\n  helloMessage: <span class=\"hljs-string\">'你好世界'</span>\n})\nassert.equal(<span class=\"hljs-string\">'你好世界'</span>, hello.sayHello());",
                "isRoot": false,
                "uuid": "32b8e5af-7122-4250-8118-4dc017969f4e",
                "parentUUID": "72516393-74cc-4e4e-8549-868ae26a92bc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 3000,
            "file": "\\test\\hello-test.js",
            "uuid": "72516393-74cc-4e4e-8549-868ae26a92bc",
            "fullFile": "D:\\JS-CI-Repo2-master\\test\\hello-test.js",
            "passes": [
              "[Circular ~.suites.suites.0.suites.0.tests.0]",
              "[Circular ~.suites.suites.0.suites.0.tests.1]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sayHelloLater",
            "suites": [],
            "tests": [
              {
                "title": "should execute callback with the hello message asynchronously",
                "fullTitle": "Hello #sayHelloLater should execute callback with the hello message asynchronously",
                "timedOut": false,
                "duration": 250,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\nhello.sayHelloLater(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(helloMessage)</span> </span>{\n  assert.equal(helloMessage, <span class=\"hljs-string\">'Hello World!'</span>);\n  <span class=\"hljs-comment\">// calling done indicates that all asynchronous</span>\n  <span class=\"hljs-comment\">// aspects of test are complete.</span>\n  done();\n});",
                "isRoot": false,
                "uuid": "4c290d98-1fe0-4b78-8274-503c3f33fe2b",
                "parentUUID": "1d8ddd18-8f85-49cc-8187-f7710055a7e8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 3000,
            "file": "\\test\\hello-test.js",
            "uuid": "1d8ddd18-8f85-49cc-8187-f7710055a7e8",
            "fullFile": "D:\\JS-CI-Repo2-master\\test\\hello-test.js",
            "passes": [
              "[Circular ~.suites.suites.0.suites.1.tests.0]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 250
          },
          {
            "title": "#sayHelloThenSayHelloLater",
            "suites": [],
            "tests": [
              {
                "title": "should invoke both #sayHello and #sayHelloLater",
                "fullTitle": "Hello #sayHelloThenSayHelloLater should invoke both #sayHello and #sayHelloLater",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\n\n<span class=\"hljs-comment\">// stub the sayHello and sayHelloLater methods</span>\n<span class=\"hljs-comment\">// with sinon.</span>\nhello.sayHello = sinon.spy();\nhello.sayHelloLater = sinon.spy();\nhello.sayHelloThenSayHelloLater();\nassert.equal(hello.sayHello.callCount, <span class=\"hljs-number\">1</span>);\nassert.equal(hello.sayHelloLater.callCount, <span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "db9b8590-c846-43db-b3df-1e0c98b2a026",
                "parentUUID": "48b60f2e-7060-43a8-83f4-ea75614ac5c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 3000,
            "file": "\\test\\hello-test.js",
            "uuid": "48b60f2e-7060-43a8-83f4-ea75614ac5c2",
            "fullFile": "D:\\JS-CI-Repo2-master\\test\\hello-test.js",
            "passes": [
              "[Circular ~.suites.suites.0.suites.2.tests.0]"
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 3000,
        "file": "\\test\\hello-test.js",
        "uuid": "d82cd617-73ec-4e8d-b6c4-f35ac7796702",
        "fullFile": "D:\\JS-CI-Repo2-master\\test\\hello-test.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 3000,
    "uuid": "c129a0d6-7027-42c1-be44-d9c3ed0d1b9a",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should return the default hello message if no options are provided",
      "fullTitle": "#sayHello should return the default hello message if no options are provided",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\nassert.equal(<span class=\"hljs-string\">'Hello World!'</span>, hello.sayHello());",
      "isRoot": false,
      "uuid": "ac3e0106-4bd9-4698-9d73-123278013e21",
      "parentUUID": "72516393-74cc-4e4e-8549-868ae26a92bc",
      "skipped": false
    },
    {
      "title": "should allow the user to override the helloMessage when instantiating",
      "fullTitle": "#sayHello should allow the user to override the helloMessage when instantiating",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello({\n  helloMessage: <span class=\"hljs-string\">'你好世界'</span>\n})\nassert.equal(<span class=\"hljs-string\">'你好世界'</span>, hello.sayHello());",
      "isRoot": false,
      "uuid": "285b74d8-3ce4-4839-8790-92729e8346f7",
      "parentUUID": "72516393-74cc-4e4e-8549-868ae26a92bc",
      "skipped": false
    },
    {
      "title": "should execute callback with the hello message asynchronously",
      "fullTitle": "#sayHelloLater should execute callback with the hello message asynchronously",
      "timedOut": false,
      "duration": 250,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\nhello.sayHelloLater(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(helloMessage)</span> </span>{\n  assert.equal(helloMessage, <span class=\"hljs-string\">'Hello World!'</span>);\n  <span class=\"hljs-comment\">// calling done indicates that all asynchronous</span>\n  <span class=\"hljs-comment\">// aspects of test are complete.</span>\n  done();\n});",
      "isRoot": false,
      "uuid": "0d2d773b-9414-49ce-9eca-fda0e9d14f64",
      "parentUUID": "1d8ddd18-8f85-49cc-8187-f7710055a7e8",
      "skipped": false
    },
    {
      "title": "should invoke both #sayHello and #sayHelloLater",
      "fullTitle": "#sayHelloThenSayHelloLater should invoke both #sayHello and #sayHelloLater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\n\n<span class=\"hljs-comment\">// stub the sayHello and sayHelloLater methods</span>\n<span class=\"hljs-comment\">// with sinon.</span>\nhello.sayHello = sinon.spy();\nhello.sayHelloLater = sinon.spy();\nhello.sayHelloThenSayHelloLater();\nassert.equal(hello.sayHello.callCount, <span class=\"hljs-number\">1</span>);\nassert.equal(hello.sayHelloLater.callCount, <span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "949ad217-1d1d-4a60-9898-eee044f21857",
      "parentUUID": "48b60f2e-7060-43a8-83f4-ea75614ac5c2",
      "skipped": false
    }
  ],
  "allHooks": [],
  "allPending": [],
  "allPasses": [
    {
      "title": "should return the default hello message if no options are provided",
      "fullTitle": "#sayHello should return the default hello message if no options are provided",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\nassert.equal(<span class=\"hljs-string\">'Hello World!'</span>, hello.sayHello());",
      "isRoot": false,
      "uuid": "aff3cfe6-70eb-47f5-a61a-b11ba6b894d9",
      "parentUUID": "72516393-74cc-4e4e-8549-868ae26a92bc",
      "skipped": false
    },
    {
      "title": "should allow the user to override the helloMessage when instantiating",
      "fullTitle": "#sayHello should allow the user to override the helloMessage when instantiating",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello({\n  helloMessage: <span class=\"hljs-string\">'你好世界'</span>\n})\nassert.equal(<span class=\"hljs-string\">'你好世界'</span>, hello.sayHello());",
      "isRoot": false,
      "uuid": "fa2acc84-b3a8-4621-a9f9-3d3d7ad59528",
      "parentUUID": "72516393-74cc-4e4e-8549-868ae26a92bc",
      "skipped": false
    },
    {
      "title": "should execute callback with the hello message asynchronously",
      "fullTitle": "#sayHelloLater should execute callback with the hello message asynchronously",
      "timedOut": false,
      "duration": 250,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\nhello.sayHelloLater(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span><span class=\"hljs-params\">(helloMessage)</span> </span>{\n  assert.equal(helloMessage, <span class=\"hljs-string\">'Hello World!'</span>);\n  <span class=\"hljs-comment\">// calling done indicates that all asynchronous</span>\n  <span class=\"hljs-comment\">// aspects of test are complete.</span>\n  done();\n});",
      "isRoot": false,
      "uuid": "dfbb88c4-e3f6-483a-955d-a46ae2888cf4",
      "parentUUID": "1d8ddd18-8f85-49cc-8187-f7710055a7e8",
      "skipped": false
    },
    {
      "title": "should invoke both #sayHello and #sayHelloLater",
      "fullTitle": "#sayHelloThenSayHelloLater should invoke both #sayHello and #sayHelloLater",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> hello = <span class=\"hljs-keyword\">new</span> Hello();\n\n<span class=\"hljs-comment\">// stub the sayHello and sayHelloLater methods</span>\n<span class=\"hljs-comment\">// with sinon.</span>\nhello.sayHello = sinon.spy();\nhello.sayHelloLater = sinon.spy();\nhello.sayHelloThenSayHelloLater();\nassert.equal(hello.sayHello.callCount, <span class=\"hljs-number\">1</span>);\nassert.equal(hello.sayHelloLater.callCount, <span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3479c79a-8b43-461a-a228-fed74cd6a750",
      "parentUUID": "48b60f2e-7060-43a8-83f4-ea75614ac5c2",
      "skipped": false
    }
  ],
  "allFailures": []
}